<<<
== LAB 1 :: Arduino IDE, compiling, and uploading a program to the ESP8266

. Log into the lab system with 
** user: arduino  
** password: arduino
. Plug in the ESP8266 using the USB cable
. Double click on the Arduino IDE icon to bring up the IDE, might be under 
** 'Activities->Show Programs'
. Click on 'Tools->Board' and pick
**  “NodeMCU 1.0 (ESP 12-E Module)”
. Click on Tools and make sure 
** "Upload Speed" is set to 
*** 115200 
**  "Port" is set to 
*** /dev/ttyUSB0 or
*** /dev/ttyUSB1
. Click on 'File->Examples->ESP8266->Blink' This should bring up a code window with the “Blink” program loaded.
. Take a look at this small program(sketch). Note that it has two main functions . All ESP8266 sketches will contain at least these two functions.
** setup() function, which is run once when the sketch starts 
** loop() function, which is run in a loop after setup completes
. Click on the 'Check” icon on the toolbar to compile the sketch(program).
** If you see no errors in the output window, click on the “Right Arrow” icon on the toolbar to upload the program to your ESP8266. You should see a progress indicator in the output window and the Blue LED (near antenna) blinking on the ESP8266.
** When the upload completes, the ESP8266 will start running the program. You should see the Red or Blue(near usb connector) LED turning off and on with a pause of one second between changes.
. Edit the program to change the timing of the blinks. This will be done with the two lines that currently read 

[width="60%",cols="m",grid="none"]
|==============================================
|delay(1000);  
|==============================================
*** change it to whatever you like.

//<1> the value is in milliseconds 

[start=10]
. Compile and upload the modified program.
TIP: Can just click on the "upload arrow", and the IDE will compile before uploading 
. Verify that the LED blink rate on your ESP8266 has successfully changed.

