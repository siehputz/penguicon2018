<<<
== LAB 10 ::  ESP8266 Using ESPeasy Framework 

=== Install and Configure ESPeasy to send DHT11 sensor data to a MQTT broker 
. Look at https://www.letscontrolit.com/wiki/index.php/ESPEasy#Get_started

. Upload the precompiled ESPeasy firmware to esp8266 

NOTE: Precompiled image is located at http://www.letscontrolit.com/downloads/ESPEasy_R120.zip .  This has already been downloaded and unziped to your stations. I included the Linux script to install this firmware to the esp8266 as mentioned at https://www.letscontrolit.com/wiki/index.php/Tutorial_ESPEasy_Firmware_Upload . 

[start=3]
. Look at https://www.letscontrolit.com/wiki/index.php/Tutorial_ESPEasy_Firmware_Upload 

** You have a nodemcu version of esp8266 so we have to select
*** 4096K version of the ESPeasy firmware in the next step 

. Start a terminal window

. Run espeasyflash.sh

** espeasyflash script will ask for
*** USB Serial port to upload to
**** /dev/ttyUSB0 or
**** /dev/ttyUSB1
***** Determine which serial port with 

[source,bash]
ls /dev/ttyUSB*

*** Firmware to upload
**** 0 ESPEasy_R147_4096.bin

[source,bash]
--------------------
cd Downloads/images/esp8266-frameworks/espeasy
./espeasyflash.sh
--------------------

[start=6]
. After flash is done 
** Start Arduino Serial Console 
*** *AFTER* all of the flash clearing is done and your see
**** 'wdt reset'
***** Reboot esp8266 via reset button

. Configure ESPeasy running on your esp8266 via ESP Easy web interface 

.. Configure Network Settings

** https://www.letscontrolit.com/wiki/index.php/ESPEasy#Config_page

*** Using a tablet or smart phone or your station look for WIFI networks with a 
SSID of ESP_0 ( this might be confusing if many do this at the same time)
*** Connect to ESP_0 wifi network
**** Password is 'configesp'
*** In a web browser go to 192.168.4.1  (default ip address ,  might be confusing if many do this at the same time)
**** Should see 'Welcome to ESP Easy:newdevice'
***** Click on 'iotlab'  Network
***** Password 'iotlabpass'
**** Click on 'Connect'
***** Should get a "Please wait for ... while trying to connect"
***** Note the IP ADDRESS given by dhcp
**** Using a tablet, smart phone or your station switch to the Network with SSID
***** iotlab 
***** Password 'iotlabpass'
** Review this first screen
** Click on 'Config'
*** Change "Name" to 
**** easyxx
***** where xx is your station number
*** Change "Admin Password" to 
**** easyxxpass
***** where xx is your station number
*** "SSID" should already be 
**** iotlab
*** "WPA Key" should already be 
**** iotlabpass
*** Change "Protocol" 
**** "OpenHab MQTT"
*** Change "Controller IP" 
**** your station 192.168.10.x" address, address was assigned via dhcp 
*** Should already have "Controller Port" set to 
**** 1883 
***** MQTT default port 
*** Change "Controller User" 
**** stationxx
*****  where xx is your station number 
*** Change "Controller Password" 
**** stationxxpass
*****  where xx is your station number 
** Click on "*Submit*" at botton of page to save settings to esp8266 flash
** Bring up Arduino console window to determine IP address assigned via dhcp on next reboot
** Reboot by pressing "reset" button or via "Tools" tab "Reboot" button
** Login to esp8266 as with ipaddress that Arduino Console shows
*** esp8266 is now on iotlab network 

.. Configure Hardware settings Boot State (GPIO pins)

** https://www.letscontrolit.com/wiki/index.php/ESPEasy#Config_page

** There should not be any need to change these for this lab

.. Configure Devices settings

* https://www.letscontrolit.com/wiki/index.php/ESPEasy#Devices_page

** Click on the 'Devices" tab

*** Click on "Edit" of "Task 1"
**** Select Device 
***** "Temperature & Humidity - DHT"
**** Name
***** <what ever you want>
**** Delay  
***** time in miliseconds
***** 500 
**** IDX/Var
***** 1  --  It is the first so 1 is good
**** 1st GPIO
***** GPIO-14 
***** which is (D5) (look on Pin diagram)
**** Send Data
***** checked  
***** sends data to protocol/controller defined in "Network Settings" 
*** Optional Settings
**** Formula Temperature  -  Since DHT library defaults to Celcius could change
***** %value% * 9/5 + 32 
**** Value Name 1  -- Will show as name used in MQTT
***** Should already be 'Temperature'
**** Value Name 2  -- Will show as name used in MQTT
***** Should already be 'Humidity'
** Click on *Submit* to save

.. Configure Tools settings

** https://www.letscontrolit.com/wiki/index.php/ESPEasy#Tools_page

** Click on the 'Tools" tab
*** System/Advanced
***** Look it over -- no changes needed for lab
*** Settings/Save
**** Can save setting for later reload via Settings/Load
**** Good idea so as to not have to enter by hand again
*** Firmware Load
**** Allows for OTA (Over the Air) updates
*** Command
**** Can enter commands , mostly for testing
***** See https://www.letscontrolit.com/wiki/index.php/ESPEasy_Command_Reference
** Click on *Submit* to save
** Bring up Arduino console window to note boot messages 
** Reboot by pressing "reset" button or via "Tools" tab "Reboot" button
. Check that esp8266 is reading the DHT11 and sending data to MQTT
** Login to esp8266 as with ipaddress that Arduino Console shows
*** esp8266 is now on iotlab network 
** Click on Tools/Advanced
*** Change "Serial Log Level" 
**** 4
*** Change "Web Log Level" 
**** 4
** Click on *Submit* to save
** Bring up Arduino Serial console window to see serial log messages 
** Reboot by pressing "reset" button or via "Tools" tab "Reboot" button
*** Should see MQTT messages (along with others) 
. Check that MQTT on your station is receiving data from the esp8266 
** On your station in a terminal window 
*** mosquitto_sub -h localhost -u stationxx -P stationxxpass -v -t ''#''
**** where xx is your station number
**** Note ''#'' is the wildcard for all topics

// vim: set syntax=asciidoc:
