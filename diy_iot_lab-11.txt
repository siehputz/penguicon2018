<<<
== LAB 11 :: Setup ESP8266 to publish to MQTT broker, and configure a Node-RED flow to subscribe to MQTT and upload to the cloud

[start=1]
. If you do not have an account at adafruit.io, you will need to use a web browser and go to https://io.adafruit.com/. 
  Click on the `Get Started for Free' box on the top right of the screen. Enter the required info (Name, email, username, and password) 
  and click on `Create Account'
. If you did Lab 9, you can use that flow as a base for this one. Delete the email node, and go to Step 10 below.
. Reload the MQTT sketch from Lab 4 into your ESP8266.
. On your Node-RED screen, click on the `+' button on the top right of the design screen to open another flow.
. Double-click on the flow name to bring up its edit window. Change the name to `Cloud-Test'. 
   Note that this is also where you would delete a flow that you no longer want. Click `Done'.
. Drag a mqtt node from the input list onto the design screen. Note that there is also a mqtt node in the output section, 
  which we do not want to use here.
. Double-click on the mqtt node to bring up the edit window. Since your mosquitto broker and Node-RED are running on the same system, 
  enter `localhost:1883' in the Server box.
. Enter the topic name you used from Lab 4 in the Topic box.
. Change the QOS from 2 to 0.
. Change the name to `MQTT subscribe' and hit `Done'.
. Click and drag an mqtt output node from the `output' group. Note that you may have to scroll down to see this one. 
  Make sure you get the output node (connector on the left) and not the input node (connector on the right).
. Double-click the MQTT output node to bring up the edit window.
. Select `Add new mqtt-broker' in the Server drop-down. Click on the edit icon to the right to configure a new MQTT broker.
. Under the Connection tab enter `io.adafruit.com' in the `Server' box and `8883' in the 'Port' box. 
  Check the `Enable secure (SSL/TLS) connection box.  
. Select `Add new tsl-config' in the TLS COnfiguration box, and the click the edit icon to the right. Enter the following paths:
       Certificate - $HOME/node_modules/adafruit-io/node_modules/mqtt/examples/tls client/tls-cert.pem
       Private Key - $HOME/node_modules/adafruit-io/node_modules/mqtt/examples/tls client/tls-key.pem
       CA Certificate - $HOME/node_modules/adafruit-io/node_modules/mqtt/examples/tls server/crt.server1.pem
. Uncheck the `Verify server certificate box and enter a name (such as `My Cert') in the Name box.
. Click the `Update' button on the top right and make sure your new name is chosen in the TLS Configuration box. 
  Click the `Add' button on the top right.
. Click on the `Security` tab to bring up the login screen.
. Enter your Adafruit username and password and click `Add'
. You should now be back in the MQTT node edit panel. Make sure io.adafruit.com:8883 is in the `Server' box; and 
  enter <your adafruit login>/feeds/IOTLab in both the `Topic' and `Name' boxes. Click `Done' on the top right.
. Connect the new MQTT out node to your previous MQTT in node and deploy.
. Log into your Adafruit account, and check for your Topic under Feeds. 
  Note that you could be getting one every 15 seconds, so if it is working you may want to unplug the ESP8266 after a few minutes, 
  or change the delay timer in your sketch.


// vim: set syntax=asciidoc:

